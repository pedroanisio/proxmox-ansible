########################################################################
#                          TCP/IP STACK HARDENING                      #
# This configuration file contains system settings for hardening and   #
# optimizing the TCP/IP stack on Linux systems, tailored for a simple  #
# Debian server environment. Each setting is intended to enhance       #
# security and/or improve network performance. Apply these settings by #
# placing this file in /etc/sysctl.d/ and running 'sysctl --system' or #
# rebooting the system.                                                #
########################################################################

# === REDIRECTS AND SOURCE ROUTING ===
# Prevent ICMP redirect acceptance and sending to mitigate potential man-in-the-middle attacks.
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

# Disable acceptance of source-routed packets to prevent traffic interception.
net.ipv4.conf.default.accept_source_route = 0

# === REVERSE PATH FILTERING ===
# Enforce strict validation of incoming packets' source addresses to prevent IP spoofing.
net.ipv4.conf.default.rp_filter = 2

# === IP FORWARDING ===
# Disable IP forwarding unless specifically required for routing duties.
net.ipv4.ip_forward = 0

# === TCP SETTINGS ===
# Use BBR for TCP congestion control; beneficial for most network environments.
net.ipv4.tcp_congestion_control = bbr
# Enable TCP Fast Open to reduce TCP handshake times, improving speed for frequent connections.
net.ipv4.tcp_fastopen = 3
# Set TCP FIN timeout to quickly clear closed TCP connections, freeing up resources.
net.ipv4.tcp_fin_timeout = 10
# Configure TCP keepalive settings to help identify and close dead connections.
net.ipv4.tcp_keepalive_intvl = 10
net.ipv4.tcp_keepalive_probes = 6
net.ipv4.tcp_keepalive_time = 60
# Reduce SYN and SYN-ACK retries to lower the impact of connection initiation failures.
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_synack_retries = 2
# Optimize socket memory usage with buffer size adjustments based on expected traffic.
net.ipv4.tcp_rmem = 4096 1048576 2097152
net.ipv4.tcp_wmem = 4096 65536 16777216

# === IPv6 SETTINGS ===
# Disable IPv6 if not used to simplify network configuration and reduce attack surface.
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1

# === ADDITIONAL SECURITY ===
# Enable RFC 1337 to protect against TIME-WAIT assassination hazards in TCP.
net.ipv4.tcp_rfc1337 = 1
# Disable TCP SACK to mitigate certain types of network-based DoS attacks.
net.ipv4.tcp_sack = 0
# Enable TCP MTU probing to enhance path MTU discovery, useful for avoiding IP fragmentation.
net.ipv4.tcp_mtu_probing = 1
# Limit retries for orphaned (not fully closed) TCP connections to conserve resources.
net.ipv4.tcp_orphan_retries = 2
# Allow reuse of TIME-WAIT sockets for new connections when it is safe from a protocol perspective.
net.ipv4.tcp_tw_reuse = 1

# === UDP SETTINGS ===
# Set minimum receive/send buffer sizes for UDP to ensure adequate performance for UDP traffic.
net.ipv4.udp_rmem_min = 8192
net.ipv4.udp_wmem_min = 8192

# === CORE NETWORK SETTINGS ===
# Set the default queuing discipline to fair queuing to optimize packet scheduling.
net.core.default_qdisc = fq
# Configure maximum network device backlog to handle traffic spikes effectively.
net.core.netdev_max_backlog = 1000  # Adjusted lower for simple servers not expecting massive traffic.
# Set maximum buffer size for ancillary data to optimize memory usage.
net.core.optmem_max = 65536
# Default and maximum receive buffer settings for typical server load.
net.core.rmem_default = 1048576
net.core.rmem_max = 4194304  # Reduced from original high setting for Proxmox.
# Maximum pending connection queue length suitable for moderate to high traffic scenarios.
net.core.somaxconn = 1024  # Adjusted for typical use cases, not ultra-high performance scenarios.
# Default and maximum send buffer settings aligned with expected network load.
net.core.wmem_default = 1048576
net.core.wmem_max = 4194304
# Configure Unix domain sockets' maximum datagram queue length for efficient inter-process communication.
net.unix.max_dgram_qlen = 1024

########################################################################
# Review and adjust these settings based on monitoring and actual usage  #
# patterns to find a balance between performance and resource utilization.#
########################################################################
